---
import Layout from '@layouts/Neovim.astro';
import { basics } from '@cv'
import { work } from '@cv'
import {Icon} from "astro-icon/components";


const { name, label, location, profiles, email, summary } = basics
const { city, region, address } = location
---

<Layout title="About">
  <div class="flex flex-col items-center justify-center h-full mt-[8%]">
    <h1 class="text-4xl font-bold mb-2 text-nvim-blue">About</h1>
    <div class="text-center w-1/2 h-full">
      <p class="mb-4 text-sm">version 0.0.1</p>
      <div class="flex flex-col text-left justify-left p-10 prose-invert min-h-max">
        <span class="text-xs text-skin-muted">[me].jpg</span>
        <h1 class="text-2xl">{name}</h1>
        <h2 class="text-sm text-nvim-green">{label}</h2>
        <div class="flex items
        -center gap-2 pt-1 text-sm text-skin-muted">
          {address}, {city}, {region}.
        </div>
        
        <div class="mb-2">
          <p class="font-mono opacity-75 font-semibold">
            {summary}
          </p>
        </div>
        
        <footer class='flex flex-col gap-1'>
          {
            email && (
              <a
                href={`mailto:${email}`}
                title='Send me an email'
                target='_blank'
                rel='noopener noreferrer'
                class='group'>
                <span class="text-nvim-blue transition ease-linear group-hover:-translate-y-0.5 group-hover:text-skin-hue"> > </span>
                <span>〔Email〕{email}</span>
              </a>
            )
          }
          {
            profiles.map(({ network, url}) => {
              return (
                <a
                  href={url}
                  title={`Visit ${name} profile on ${network}`}
                  aria-label={`Visit ${name} profile on ${network}`}
                  target='_blank'
                  class='group'
                  rel='noopener noreferrer'>
                  <span class="text-nvim-blue ease-linear group-hover:text-skin-hue transform transition-all group-hover:font-bold"> > </span>
                  <span >〔{network}〕</span>
                </a>
              )
            })
          }
        </footer>
        
        <span class="mb-2">---------------------------------------------------</span>
        
        <div class="min-h-max">
          {
            work && work.map(({ name, location, location_type, summary, responsibilities, achievements }) => {
              return (
                <div class="mb-4">
                  <h3 class="text-lg font-bold text-nvim-blue">{name}</h3>
                  {(location || location_type) && (
                    <div class="text-xs text-skin-muted">
                      {location} {location && location_type && '-'} {location_type}
                    </div>
                  )}
                  <div class="mt-4 flex flex-col gap-4 text-sm">
                    {summary && (
                      <div class="flex flex-col gap-1">
                        <h4 class="text-nvim-green">Summary:</h4>
                        <ul class="text-skin-muted [&>li]:ml-4 flex list-decimal flex-col gap-2">
                          {Array.isArray(summary) ? (
                            summary.map(item => (
                              <li>{item}</li>
                            ))
                          ) : (
                            <li>{summary}</li>
                          )}
                        </ul>
                      </div>
                    )}
                    
                    {(responsibilities || achievements) &&  (
                      <div class="flex relative flex-col h-16  duration-200 ease-out">
                      {responsibilities && (
                        <div class="flex flex-col gap-1">
                          <h4 class="text-nvim-green">Responsibilities:</h4>
                          <ul class="text-skin-muted [&>li]:ml-4 flex flex-col gap-2 list-decimal">
                            {responsibilities.map(responsibility => (
                              <li>{responsibility}</li>
                            ))}
                          </ul>
                        </div>
                      )}
                      
                      {achievements && (
                        <div class="flex flex-col gap-1">
                          <h4 class="text-nvim-green">Achievements:</h4>
                          <ul class="text-skin-muted [&>li]:ml-4 flex flex-col gap-2 list-decimal">
                            {achievements.map(achievement => (
                              <li>{achievement}</li>
                            ))}
                          </ul>
                        </div>
                      )}
                      </div>
                    )}
                  </div>
                </div>
              )
            })
          }
        </div>
        
      </div>
    </div>
  </div>
</Layout>