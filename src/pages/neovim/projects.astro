---
import Layout from '@layouts/Neovim.astro';
import { projects } from "@cv";
import { Icon } from "astro-icon/components";

---

<Layout title="Projects">
  <ul id="project-list">
    {projects && projects.map(({ url, description, highlights, name, isActive, github, stack}, index) => {
      return (
        <li class="mb-6 project-item leading-6" data-index={index}>
          <div class="flex gap-2">
            {isActive ? (
              <a
                class="group flex items-center gap-[6px] text-lg decoration-dotted underline-offset-[5px] hover:underline transition-all duration-200 text-nvim-blue"
                href={url}
                title={`Ver ${name}`}
                target="_blank"
                data-href={url}
              >
                {name}
                <span class="text-skin-hue transition ease-linear group-hover:-translate-y-0.5 group-hover:translate-x-0.5">
                <Icon name="ri:arrow-up-line" class="rotate-45" />
              </span>
              </a>
            ) : (
              <span class="text-lg text-nvim-blue">{name}</span>
            )}
            
            {github && (
              <a
                href={github}
                title={`View ${name} in GitHub`}
                aria-label={`View ${name} in GitHub`}
                target="_blank"
                rel="noopener"
                class="opacity-75 transition duration-200 hover:text-nvim-green decoration-dotted underline-offset-[8px] hover:underline"
              >
                <span>〔GITHUB〕</span>
              </a>
            )}
          </div>
            <div>
              {highlights && highlights.map(
                (highlight) =>
                  <span class="text-gray-600">{highlight.slice(2)}. </span>
              )}
            </div>
            <p class="text-gray-500">
              {description}
            </p>
            
            <ul class="flex print:hidden flex-wrap gap-2 mt-6" aria-label="Technologies used">
              {stack && Object.entries(stack).map(([label, icon], index) => (
                <li class=" cursor-default gap-2 bg-transparent border-nvim-green/60 text-nvim-green flex items-center border-solid border rounded-md px-2 py-1 text-xs backdrop-blur-sm">
                  <span>〔{index}〕</span>
                  <span>{label}</span>
                </li>
              ))}
            </ul>
          </li>
      )
    })}
  </ul>
</Layout>

<style>
  .project-item.active {
    background-color: rgba(0, 0, 0, 0.1);
  }
</style>

<script>
  let currentIndex = 0;
  const projectItems = document.querySelectorAll('.project-item');
  

  function moveCursor(direction: any) {
    currentIndex += direction;
    if (currentIndex < 0) currentIndex = projectItems.length - 1;
    if (currentIndex >= projectItems.length) currentIndex = 0;
  }

  function enterProjectPost() {
    const activeItem = document.querySelector('.project-item.active');
    if (activeItem) {
      window.location.href = activeItem.getAttribute('data-href') ?? "";
    }
  }

  document.addEventListener('keydown', (e) => {
    switch(e.key) {
      case 'j':
        moveCursor(1);
        break;
      case 'k':
        moveCursor(-1);
        break;
      case 'Enter':
        enterProjectPost();
        break;
    }
  });
  
</script>